import numpy as np
from PIL import Image
from py360convert import py360convert as p3c

'''
e2c(e_img, face_w=256, mode='bilinear', cube_format='dice')
Convert the given equirectangular to cubemap.
Parameters:
- e_img: Numpy array with shape [H, W, C].
- face_w: The width of each cube face.
- mode: bilinear or nearest.
- cube_format: See c2e explaination

e2p(e_img, fov_deg, u_deg, v_deg, out_hw, in_rot_deg=0, mode='bilinear')
Take perspective image from given equirectangular. Parameters:
- e_img: Numpy array with shape [H, W, C].
- fov_deg: Field of view given in int or tuple (h_fov_deg, v_fov_deg).
- u_deg: Horizontal viewing angle in range [-pi, pi]. (- Left / + Right).
- v_deg: Vertical viewing angle in range [-pi/2, pi/2]. (- Down/ + Up).
- out_hw: Output image (height, width) in tuple.
- in_rot_deg: Inplane rotation.
- mode: bilinear or nearest.

c2e(cubemap, h, w, cube_format='dice')
Convert the given cubemap to equirectangular.
Parameters:
- cubemap: Numpy array or list/dict of numpy array (depend on cube_format).
- h: Output equirectangular height.
- w: Output equirectangular width.
- cube_format: 'dice' (default) or 'horizon' or 'dict' or 'list'. Telling the format of the given cubemap.
  Say that each face of the cube is in shape of 256 (width) x 256 (height)
  'dice': a numpy array in shape of 1024 x 768 like below example 
  'horizon': a numpy array in shape of 1536 x 256 like below example 
  'list': a list with 6 elements each of which is a numpy array in shape of 256 x 256. It's just converted from 'horizon' format with one line of code: np.split(cube_h, 6, axis=1).
  'dict': a dict with 6 elements with keys 'F', 'R', 'B', 'L', 'U', 'D' each of which is a numpy array in shape of 256 x 256.

'''


./py360convert/convert360 --convert e2c --i /example_input.png --o /example_e2c.png --w 200
